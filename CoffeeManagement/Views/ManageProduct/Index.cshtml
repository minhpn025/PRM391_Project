@model ManageProductViewModels

@{
    ViewBag.Title = "Shin Coffee";
    var products = Model.Products;
}

<div class="jumbotron">
    <h1>Shin Coffee</h1>
</div>

<div class="row">
    @Html.ActionLink("Create a new product", "Create",
                        routeValues:
                        null,
                        htmlAttributes:
                        new
                        {
                            @class = "btn btn-success pull-right"
                        })
    <table class="table">
        <thead>
            <tr>
                <th scope="col">No.</th>
                <th scope="col">Name</th>
                <th scope="col">Category</th>
                <th scope="col">Description</th>
                <th scope="col">Price</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < products.Count; i++)
            {
                <tr>
                    <th scope="row">@(i + 1)</th>
                    <td>@products[i].ProductName</td>
                    <td>@products[i].Category.CategoryName</td>
                    <td>@products[i].Description</td>
                    <td>@products[i].Price <i><span class="text-danger">VND</span></i></td>
                    <td>
                        @Html.ActionLink("Edit", "Update",
                        routeValues:
                        new
                        {
                            id = products[i].Id,
                        },
                        htmlAttributes:
                        new
                        {
                            @class = "btn btn-info"
                        })
                        @*<button class="btn btn-danger" onclick="deleteProduct(@products[i].Id);">Delete</button>*@
                        @Html.ActionLink("Delete", "DeleteOneProduct",
                        routeValues:
                        new
                        {
                            id = products[i].Id,
                        },
                        htmlAttributes:
                        new
                        {
                            @class = "btn btn-danger"
                        })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @Html.PagedListPager(products, page => Url.Action("Index", new { pageIndex = page }), new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToIndividualPages = true,
        DisplayPageCountAndCurrentLocation = true,
    })
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
<script>
    function deleteProduct(id) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'Warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, do it!',
            cancelButtonText: 'Cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                swalWithBootstrapButtons.fire(
                    'Deleted!',
                    'Your product has been deleted.',
                    'success',
                )
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Your product is safe :)',
                    'error'
                )
            }
        })
    }

</script>
